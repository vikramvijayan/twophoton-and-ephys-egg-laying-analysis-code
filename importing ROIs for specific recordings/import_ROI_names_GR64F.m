% this code is meant to help get the right ROIs for anaysis
% ROIsSS53469 is the imported table (from xlx using string)
function [rec_list, ROI_list] = import_ROI_names_GR64F(ROIsGR64F, whatdoyouwant)


%%Gr64f
recording_list = {
    '2019_01_09_0000_DLC.mat',...
    '2019_01_09_0001_DLC.mat',...
    '2019_01_09_0001B_DLC.mat',...
    '2019_01_09_0002_DLC.mat',...
    '2019_01_11_0000_DLC.mat',...
    '2019_01_11_0000B_DLC.mat',...
    '2019_01_11_0001_DLC.mat',...
    '2019_01_11_0001B_DLC.mat',...
    '2019_01_11_0002_DLC.mat',...
    '2019_01_11_0002B_DLC.mat',...
    '2019_01_11_0003_DLC.mat',...
    '2019_01_11_0003B_DLC.mat',...
    '2019_01_11_0004_DLC.mat',...
    '2019_01_14_0000_DLC.mat',...
    '2019_01_14_0001_DLC.mat',...
    '2019_01_14_0002_DLC.mat',...
    '2019_01_15_0000_DLC.mat',...
    '2019_01_15_0000B_DLC.mat',...
    '2019_01_15_0001_DLC.mat',...
    '2019_01_15_0002_DLC.mat',...
    '2019_01_15_0002B_DLC.mat',...
    '2019_01_22_0000_DLC.mat',...
    '2019_01_22_0004_DLC.mat',...
    '2019_01_22_0005_DLC.mat',...
    '2019_01_23_0000_DLC.mat',...
    '2019_01_25_0000_DLC.mat',...
    '2019_01_25_0000B_DLC.mat',...
    '2019_01_25_0001_DLC.mat',...
    '2019_01_25_0002_DLC.mat',...
    '2019_02_12_0000_DLC.mat',...
    '2019_02_12_0001_DLC.mat',...
    '2019_02_12_0002_DLC.mat',...
    '2019_02_12_0003_DLC.mat',...
    '2019_02_12_0004_DLC.mat',...
   '2019_02_12_0005_DLC.mat',...
    '2019_02_12_0006_DLC.mat',...
    '2019_02_12_0007_DLC.mat',...
    '2019_02_12_0008_DLC.mat',...
    '2019_02_12_0009_DLC.mat',...
    };



% imported ROIsSS53469 as string

for i = 1:1:length(recording_list)
 
    
    ROI(i).neck_left = str2num(ROIsGR64F(i,1));
    ROI(i).neck_right = str2num(ROIsGR64F(i,2));
    ROI(i).neck_other = str2num(ROIsGR64F(i,3));
    
    
    
    %
%     if(isempty(ROI(i).leftcell))
%         ROI(i).leftcell = 0;
%     end
%     if(isempty(ROI(i).rightcell))
%         ROI(i).rightcell = 0;
%     end
%     if(isempty(ROI(i).leftcelldim))
%         ROI(i).leftcelldim = 0;
%     end
%     if(isempty(ROI(i).rightcelldim))
%         ROI(i).rightcelldim = 0;
%     end
%     if(isempty(ROI(i).leftneurite))
%         ROI(i).leftneurite = 0;
%     end
%     if(isempty(ROI(i).rightneurite))
%         ROI(i).rightneurite = 0;
%     end
%     if(isempty(ROI(i).leftneck))
%         ROI(i).leftneck = 0;
%     end
%     if(isempty(ROI(i).rightneck))
%         ROI(i).rightneck = 0;
%     end
%     if(isempty(ROI(i).combinedneck))
%         ROI(i).combinedneck = 0;
%     end
%     
end


ROI_list = [];
rec_list = [];
cnt = 0;

if(strcmp(whatdoyouwant,'anyneck'))
    for i = 1:1:length(recording_list)
        for j = 1:1:length(ROI(i).neck_left)
            cnt = cnt+1;
            rec_list{cnt} = char(recording_list(i));
            ROI_list(cnt) = ROI(i).neck_left(j);
        end
           for j = 1:1:length(ROI(i).neck_right)
            cnt = cnt+1;
            rec_list{cnt} = char(recording_list(i));
            ROI_list(cnt) = ROI(i).neck_right(j);
           end
           for j = 1:1:length(ROI(i).neck_other)
            cnt = cnt+1;
            rec_list{cnt} = char(recording_list(i));
            ROI_list(cnt) = ROI(i).neck_other(j);
        end
      
    end
end




ROI_names =ROI;

end