% this code is meant to help get the right ROIs for anaysis
% ROIsSS53469 is the imported table (from xlx using string)
function [rec_list, ROI_list, fly_ID, cell_ID] = import_ROI_names_SS53469_2cells(ROIsSS53469, whatdoyouwant)

%function [recording] = make_small_recording_group()
% these are all SS53469 includes dual imaging with SS01048 and
% SS65423 (but not SS69920)

% includes sucrose hard/soft plain/plain



% bot no optogenetics, puffs etc

recording_list = {'2019_06_10_0000.mat','2019_06_10_0001.mat','2019_06_10_0002.mat','2019_06_10_0003.mat','2019_06_10_0005.mat',...
    '2019_06_11_0000.mat','2019_06_11_0001.mat','2019_06_11_0002.mat','2019_06_11_0003.mat','2019_06_11_0004.mat','2019_06_11_0005.mat','2019_06_11_0006.mat',...
    '2019_06_12_0000.mat','2019_06_12_0001.mat','2019_06_12_0002.mat','2019_06_12_0003.mat',...
    '2019_06_13_0000.mat','2019_06_13_0001.mat','2019_06_13_0002.mat','2019_06_13_0003.mat','2019_06_13_0004.mat',...
    '2019_06_14_0000.mat','2019_06_14_0001.mat','2019_06_14_0002.mat','2019_06_14_0003.mat',...
    '2019_06_19_0000.mat','2019_06_19_0001.mat','2019_06_19_0002.mat','2019_06_19_0003.mat','2019_06_19_0004.mat',...
    '2019_06_24_0000.mat','2019_06_24_0001.mat','2019_06_24_0002.mat','2019_06_24_0003.mat',...
    '2019_06_25_0000.mat','2019_06_25_0001.mat',...
    '2019_06_26_0000.mat','2019_06_26_0001.mat','2019_06_26_0002.mat','2019_06_26_0003.mat',...
    '2019_06_28_0000.mat','2019_06_28_0001.mat','2019_06_28_0003.mat',...
    '2019_07_30_0000.mat','2019_07_30_0001.mat','2019_07_30_0002.mat',...
    '2019_07_31_0000.mat','2019_07_31_0001.mat','2019_07_31_0002.mat','2019_07_31_0003.mat',...
    '2019_08_01_0000.mat','2019_08_01_0001.mat','2019_08_01_0002.mat','2019_08_01_0003.mat','2019_08_01_0004.mat',...
    '2019_08_02_0000.mat','2019_08_02_0001.mat',...
    '2019_08_03_0000.mat','2019_08_03_0001.mat','2019_08_03_0002.mat','2019_08_03_0003.mat','2019_08_03_0004.mat',...
    '2019_08_05_0001.mat','2019_08_05_0002.mat',...
    '2019_08_06_0000.mat','2019_08_06_0001.mat','2019_08_06_0002.mat','2019_08_06_0003.mat','2019_08_06_0004.mat',...
    '2019_08_07_0000.mat','2019_08_07_0001.mat','2019_08_07_0002.mat','2019_08_07_0003.mat',...
    '2019_11_11_0000.mat','2019_11_11_0001.mat','2019_11_11_0002.mat','2019_11_11_0003.mat',...
    '2019_11_18_0001.mat',...
    '2019_11_22_0004.mat','2019_11_22_0005.mat',...
    '2019_11_25_0000.mat','2019_11_25_0001.mat','2019_11_25_0002.mat','2019_11_25_0003.mat','2019_11_25_0004.mat','2019_11_25_0005.mat',...
    '2019_12_17_0003.mat',...
    '2019_12_18_0000.mat','2019_12_18_0001.mat','2019_12_18_0003.mat','2019_12_18_0004.mat',...
    '2019_12_16_0000.mat','2019_12_16_0001.mat','2019_12_16_0002.mat','2019_12_16_0003.mat','2019_12_16_0004.mat',...
    '2019_12_19_0000.mat','2019_12_19_0001.mat','2019_12_19_0002.mat',...
    '2019_12_20_0000.mat','2019_12_20_0001.mat','2019_12_20_0002.mat','2019_12_20_0003.mat',...
    '2019_12_10_0000.mat','2019_12_10_0001.mat','2019_12_10_0002.mat','2019_12_10_0003.mat','2019_12_10_0004.mat','2019_12_10_0005.mat',...
    '2019_12_17_0000.mat','2019_12_17_0001.mat','2019_12_17_0002.mat',...
    '2019_12_19_0003.mat','2019_12_19_0004.mat','2019_12_19_0005.mat',...
    '2019_12_13_0000.mat','2019_12_13_0001.mat','2019_12_13_0002.mat','2019_12_13_0003.mat',...
    '2019_11_18_0002.mat',...
    '2019_11_14_0001.mat','2019_11_14_0002.mat','2019_11_14_0003.mat',...
    '2020_06_22_0000.mat',...
    '2020_06_22_0001.mat',...
    '2020_06_23_0000.mat',...
    '2020_06_23_0002.mat',...
    '2020_06_23_0003.mat',...
    '2020_06_24_0000.mat',...
    '2020_06_24_0001.mat',...
    '2020_06_24_0002.mat',...
    '2020_06_24_0003.mat',...
    '2020_07_20_0000.mat',...
    '2020_07_20_0001.mat',...
    '2020_07_20_0002.mat',...
    '2020_07_20_0003.mat',...
    '2020_07_20_0004.mat',...
    '2020_07_20_0005.mat',...
    '2020_07_21_0000.mat',...
    '2020_07_21_0001.mat',...
    '2020_07_21_0002.mat',...
    '2020_07_21_0003.mat',...
    '2020_07_21_0004.mat',...
    '2020_07_21_0005.mat',...
    '2020_07_21_0006.mat'};

% imported ROIsSS53469 as string

for i = 1:1:length(recording_list)
    ROI(i).leftcell = str2num(ROIsSS53469(i,1));
    ROI(i).rightcell = str2num(ROIsSS53469(i,2));
    ROI(i).leftcelldim = str2num(ROIsSS53469(i,3));
    ROI(i).rightcelldim = str2num(ROIsSS53469(i,4));
    ROI(i).leftneurite = str2num(ROIsSS53469(i,5));
    ROI(i).rightneurite = str2num(ROIsSS53469(i,6));
    ROI(i).leftneck = str2num(ROIsSS53469(i,7));
    ROI(i).rightneck = str2num(ROIsSS53469(i,8));
    ROI(i).combinedneck = str2num(ROIsSS53469(i,9));
    ROI(i).cellID = str2num(ROIsSS53469(i,11));
    ROI(i).flyID = str2num(ROIsSS53469(i,12));
    
    %
    %     if(isempty(ROI(i).leftcell))
    %         ROI(i).leftcell = 0;
    %     end
    %     if(isempty(ROI(i).rightcell))
    %         ROI(i).rightcell = 0;
    %     end
    %     if(isempty(ROI(i).leftcelldim))
    %         ROI(i).leftcelldim = 0;
    %     end
    %     if(isempty(ROI(i).rightcelldim))
    %         ROI(i).rightcelldim = 0;
    %     end
    %     if(isempty(ROI(i).leftneurite))
    %         ROI(i).leftneurite = 0;
    %     end
    %     if(isempty(ROI(i).rightneurite))
    %         ROI(i).rightneurite = 0;
    %     end
    %     if(isempty(ROI(i).leftneck))
    %         ROI(i).leftneck = 0;
    %     end
    %     if(isempty(ROI(i).rightneck))
    %         ROI(i).rightneck = 0;
    %     end
    %     if(isempty(ROI(i).combinedneck))
    %         ROI(i).combinedneck = 0;
    %     end
    %
end


ROI_list = [];
rec_list = [];
cnt = 0;

if(strcmp(whatdoyouwant,'2brightcell'))
    for i = 1:1:length(recording_list)
        if( (length(ROI(i).leftcell) > 0) && (length(ROI(i).rightcell) >0))
            cnt = cnt+1;
            rec_list{cnt} = char(recording_list(i));
            ROI_list(cnt) = ROI(i).leftcell(1);
               cell_ID(cnt) = ROI(i).cellID(1);
            fly_ID(cnt) = ROI(i).flyID(1);
            cnt = cnt+1;
            rec_list{cnt} = char(recording_list(i));
            ROI_list(cnt) = ROI(i).rightcell(1);
            cell_ID(cnt) = ROI(i).cellID(1);
            fly_ID(cnt) = ROI(i).flyID(1);
        end
    end
end


if(strcmp(whatdoyouwant,'2brightanddim'))
    for i = 1:1:length(recording_list)
        if( (length(ROI(i).leftcell) > 0) && (length(ROI(i).leftcelldim) >0))
            cnt = cnt+1;
            rec_list{cnt} = char(recording_list(i));
            ROI_list(cnt) = ROI(i).leftcell(1);
               cell_ID(cnt) = ROI(i).cellID(1);
            fly_ID(cnt) = ROI(i).flyID(1);
            cnt = cnt+1;
            rec_list{cnt} = char(recording_list(i));
            ROI_list(cnt) = ROI(i).leftcelldim(1);
            cell_ID(cnt) = ROI(i).cellID(1);
            fly_ID(cnt) = ROI(i).flyID(1);
        end
        ROI(i).cellID(1)= ROI(i).cellID(1)+1e6;

        if( (length(ROI(i).rightcell) > 0) && (length(ROI(i).rightcelldim) >0))
            cnt = cnt+1;
            rec_list{cnt} = char(recording_list(i));
            ROI_list(cnt) = ROI(i).rightcell(1);
               cell_ID(cnt) = ROI(i).cellID(1);
            fly_ID(cnt) = ROI(i).flyID(1);
            cnt = cnt+1;
            rec_list{cnt} = char(recording_list(i));
            ROI_list(cnt) = ROI(i).rightcelldim(1);
            cell_ID(cnt) = ROI(i).cellID(1);
            fly_ID(cnt) = ROI(i).flyID(1);
        end
        
    end
    
end

ROI_names =ROI;

end